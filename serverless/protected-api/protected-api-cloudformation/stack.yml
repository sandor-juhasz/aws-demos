---
AWSTemplateFormatVersion: '2010-09-09'
Description: The AWS CloudFormation template for this Serverless application
Resources:
  ServerlessDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
            
  ServerlessDeploymentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ServerlessDeploymentBucket
      PolicyDocument:
        Statement:
        - Action: s3:*
          Effect: Deny
          Principal: "*"
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: ServerlessDeploymentBucket
              - "/*"
          Condition:
            Bool:
              aws:SecureTransport: false
              
  HelloLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/protected-api-dev-hello"
      
  IamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - dev
            - protected-api
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/protected-api-dev*:*
          - Effect: Allow
            Action:
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/protected-api-dev*:*:*
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - protected-api
          - dev
          - Ref: AWS::Region
          - lambdaRole
          
  HelloLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/protected-api/dev/1574228111842-2019-11-20T05:35:11.842Z/protected-api.zip
      FunctionName: protected-api-dev-hello
      Handler: handler.hello
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - IamRoleLambdaExecution
        - Arn
      Runtime: python3.7
      Timeout: 6
    DependsOn:
    - HelloLogGroup
    - IamRoleLambdaExecution
    
  HelloLambdaVersionXPiqRKMFp4h7fGoXi6V2rqO10OM1xkEpDEPK2fNr6U:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: HelloLambdaFunction
      CodeSha256: uiOz/EXVFiz8FUiqbfjrGOSOTf3BlVsCbvJv1aqYraw=
      
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: dev-protected-api
      EndpointConfiguration:
        Types:
        - EDGE
      Policy:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
            - Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":user/"
                - Ref: ApiClientTestUser1
          Action: execute-api:Invoke
          Resource:
          - execute-api:/*/*/*
          
  ApiGatewayResourceHello:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: hello
      RestApiId:
        Ref: ApiGatewayRestApi
        
  ApiGatewayMethodHelloGet:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      RequestParameters: {}
      ResourceId:
        Ref: ApiGatewayResourceHello
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - ":lambda:path/2015-03-31/functions/"
            - Fn::GetAtt:
              - HelloLambdaFunction
              - Arn
            - "/invocations"
      MethodResponses: []
      
  ApiGatewayDeployment1574228111166:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: dev
    DependsOn:
    - ApiGatewayMethodHelloGet
    
  HelloLambdaPermissionApiGateway:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - HelloLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":execute-api:"
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: ApiGatewayRestApi
          - "/*/*"
          
  ApiClientTestUser1:
    Type: AWS::IAM::User
    Properties:
      UserName: api-client-test
      
  ApiClientTestUser2:
    Type: AWS::IAM::User
    Properties:
      UserName: api-client-test2
      
Outputs:
  ServerlessDeploymentBucketName:
    Value:
      Ref: ServerlessDeploymentBucket
  HelloLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: HelloLambdaVersionXPiqRKMFp4h7fGoXi6V2rqO10OM1xkEpDEPK2fNr6U
  ServiceEndpoint:
    Description: URL of the service endpoint
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: ApiGatewayRestApi
        - ".execute-api."
        - Ref: AWS::Region
        - "."
        - Ref: AWS::URLSuffix
        - "/dev"
        
